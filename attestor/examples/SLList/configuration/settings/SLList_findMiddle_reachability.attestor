# Master thesis - Benchmark
# Specification:
--description "fast is always reachable by slow"

# Analyzed Method
--classpath "examples/SLList/configuration/code"
--class "SLList"
--method "findMiddle"

# Grammar
--predefined-grammar "SLList"
--rename ListNode=SLList next=next

# Initial states
--initial "examples/SLList/configuration/initial/sll_long.json"

# Model Checking
--model-checking "G ({fast != slow} -> {isReachable(slow,fast,[next])})"
--mc-mode "hierarchical"
#--mc-skip "<init>"

# Options
--admissible-abstraction
--debug